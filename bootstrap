#! /bin/bash

if [ ! -d build-aux ]; then
	mkdir build-aux
fi

# Parse options
api=0
args=`getopt a $*`
if [ $? != 0 ]
then
  echo 'Usage: ./bootstrap [-a]'
  exit 2
fi
set -- $args
for i
do
  case "$i"
  in
    -a)
      api=1
      shift;;

    --)
      shift; break;;
  esac
done

# Create root Makefile.am & configure.ac
if [ $api -eq 0 ]; then

  echo "Bootstraping..."

  echo '# This file was generated by bootstrap, do not edit!

AC_INIT([ETrun], [1.0], [www.timeruns.net])

AC_CONFIG_AUX_DIR([build-aux])

AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE([ETrun], [1.0])

# Init libtool and disable static library creation
LT_INIT(disable-static)

# Compilers we use
AC_PROG_CC

# Check for running on Darwin.
AC_MSG_CHECKING([if running on Darwin])
UNAME=`uname -s`
if test "${UNAME}" = "Darwin"; then
  AM_CONDITIONAL([DARWIN], true)
else
  AM_CONDITIONAL([DARWIN], false)
fi

# Auto strip
AC_CHECK_TOOL([STRIP],[strip])

# Check if these headers exist
AC_CONFIG_HEADERS([config.h])

# List of Makefiles we want to generate
AC_CONFIG_FILES([Makefile src/cgame/Makefile src/game/Makefile src/ui/Makefile])

AC_OUTPUT' > configure.ac

  echo '# This file was generated by bootstrap, do not edit!

SUBDIRS = src/game src/cgame src/ui
ACLOCAL_AMFLAGS = -I m4' > Makefile.am

  echo '#! /bin/bash

# This file was generated by bootstrap, do not edit!

BUILD_DIR=_build
QAGAME_LIB=qagame_mac
CGAME_LIB=cgame_mac
UI_LIB=ui_mac

# Parse options
debug=0
args=`getopt d $*`
if [ $? != 0 ]
then
  echo "Usage: ./bootstrap [-d]"
  exit 2
fi
set -- $args
for i
do
  case "$i"
  in
    -d)
      debug=1
      shift;;

    --)
      shift; break;;
  esac
done

# Clean
make distclean

rm -f $BUILD_DIR/*_mac
rm -rf $BUILD_DIR/*_mac.bundle

# Compile for OSX
if [ $debug -eq 0 ]; then
  echo "Will now compile *WITHOUT* debug flags"
  sleep 1
  ./configure CFLAGS="-m32"
else
  echo "Will now compile *WITH* debug flags"
  sleep 1
  ./configure CFLAGS="-m32 -g -ggdb"
fi

make

if [ $? != 0 ]; then
  exit
fi

# Strip if debug mode is OFF
if [ $debug -eq 0 ]; then
  strip -x src/cgame/.libs/libcgame.dylib
  strip -x src/game/.libs/libgame.dylib
  strip -x src/ui/.libs/libui.dylib
fi

mv src/cgame/.libs/libcgame.dylib $BUILD_DIR/$CGAME_LIB
mv src/game/.libs/libgame.dylib $BUILD_DIR/$QAGAME_LIB
mv src/ui/.libs/libui.dylib $BUILD_DIR/$UI_LIB

cd $BUILD_DIR
../makebundle.sh qagame
../makebundle.sh cgame
../makebundle.sh ui
cd ..' > osx_compile.sh

  echo '#! /bin/bash

# This file was generated by bootstrap, do not edit!

BUILD_DIR=_build

# Parse options
debug=0
args=`getopt d $*`
if [ $? != 0 ]
then
  echo "Usage: ./bootstrap [-d]"
  exit 2
fi
set -- $args
for i
do
  case "$i"
  in
    -d)
      debug=1
      shift;;

    --)
      shift; break;;
  esac
done

# Clean
make distclean

# Compile for linux
if [ $debug -eq 0 ]; then
  echo "Will now compile *WITHOUT* debug flags"
  sleep 1
  ./configure CFLAGS="-Wno-enum-compare -Wno-format-security -Wno-switch -Wno-array-bounds"
else
  echo "Will now compile *WITH* debug flags"
  sleep 1
  ./configure CFLAGS="-Wno-enum-compare -Wno-format-security -Wno-switch -Wno-array-bounds -g -ggdb"
fi

make

if [ $? != 0 ]; then
  exit
fi

# Strip if debug mode is OFF
if [ $debug -eq 0 ]; then
  strip -s src/cgame/.libs/libcgame.so
  strip -s src/game/.libs/libgame.so
  strip -s src/ui/.libs/libui.so
fi

mv src/cgame/.libs/libcgame.so $BUILD_DIR/cgame.mp.i386.so
mv src/game/.libs/libgame.so $BUILD_DIR/qagame.mp.i386.so
mv src/ui/.libs/libui.so $BUILD_DIR/ui.mp.i386.so' > linux_compile.sh

else

  echo "Boostraping with api..."

  echo '# This file was generated by bootstrap, do not edit!

AC_INIT([ETrun], [1.0], [www.timeruns.net])

AC_CONFIG_AUX_DIR([build-aux])

AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE([ETrun], [1.0])

# Init libtool and disable static library creation
LT_INIT(disable-static)

# Compilers we use
AC_PROG_CC

# Check for running on Darwin.
AC_MSG_CHECKING([if running on Darwin])
UNAME=`uname -s`
if test "${UNAME}" = "Darwin"; then
  AM_CONDITIONAL([DARWIN], true)
else
  AM_CONDITIONAL([DARWIN], false)
fi

# Auto strip
AC_CHECK_TOOL([STRIP],[strip])

# Check if these headers exist
AC_CONFIG_HEADERS([config.h])

# List of Makefiles we want to generate
AC_CONFIG_FILES([Makefile src/cgame/Makefile src/game/Makefile src/ui/Makefile src/APImodule/Makefile])

AC_OUTPUT' > configure.ac

  echo '# This file was generated by bootstrap, do not edit!

SUBDIRS = src/APImodule src/game src/cgame src/ui
ACLOCAL_AMFLAGS = -I m4' > Makefile.am

  echo '#! /bin/bash

# This file was generated by bootstrap, do not edit!

BUILD_DIR=_build
QAGAME_LIB=qagame_mac
API_LIB=api_mac
CGAME_LIB=cgame_mac
UI_LIB=ui_mac

# Parse options
debug=0
build_curl=0
args=`getopt dc $*`
if [ $? != 0 ]
then
  echo "Usage: ./bootstrap [-d] [-c]"
  exit 2
fi
set -- $args
for i
do
  case "$i"
  in
    -d)
      debug=1
      shift;;

    -c)
      build_curl=1
      shift;;

    --)
      shift; break;;
  esac
done

# Build libcurl & c-ares
if [ $build_curl -eq 1 ]; then
  cd src/libs/c-ares
  ./buildconf && ./configure CFLAGS="-m32" --disable-shared && make && make install
  cd ../curl
  ./buildconf && ./configure CFLAGS="-m32" --without-ssl \
  --disable-shared \
  --disable-crypto-auth \
  --disable-ipv6 \
  --disable-proxy \
  --enable-ares \
  --disable-manual \
  --disable-ftp \
  --disable-file \
  --disable-ldap \
  --disable-ldaps \
  --disable-rtsp \
  --enable-proxy \
  --disable-dict \
  --disable-telnet \
  --disable-tftp \
  --disable-pop3 \
  --disable-imap \
  --disable-smtp \
  --disable-manual \
  --disable-ipv6 \
  --disable-sspi \
  --disable-cookies \
  --disable-gopher && make

  if [ $? != 0 ]; then
    cd ../../..
    exit
  fi

  cd ../../..
fi

# Clean
make distclean

rm -f $BUILD_DIR/*_mac
rm -rf $BUILD_DIR/*_mac.bundle


# Compile for OSX
if [ $debug -eq 0 ]; then
  echo "Will now compile *WITHOUT* debug flags"
  sleep 1
  ./configure CFLAGS="-m32"
else
  echo "Will now compile *WITH* debug flags"
  sleep 1
  ./configure CFLAGS="-m32 -g -ggdb"
fi

make

if [ $? != 0 ]; then
  exit
fi

# Strip if debug mode is OFF
if [ $debug -eq 0 ]; then
  strip -x src/cgame/.libs/libcgame.dylib
  strip -x src/game/.libs/libgame.dylib
  strip -x src/ui/.libs/libui.dylib
  strip -x src/APImodule/.libs/libapi.dylib
fi

mv src/cgame/.libs/libcgame.dylib $BUILD_DIR/$CGAME_LIB
mv src/game/.libs/libgame.dylib $BUILD_DIR/$QAGAME_LIB
mv src/ui/.libs/libui.dylib $BUILD_DIR/$UI_LIB
mv src/APImodule/.libs/libapi.dylib $BUILD_DIR/$API_LIB

cd $BUILD_DIR
../makebundle.sh qagame
../makebundle.sh cgame
../makebundle.sh ui
cd ..' > osx_compile.sh

  echo '#! /bin/bash

# This file was generated by bootstrap, do not edit!

BUILD_DIR=_build

# Parse options
debug=0
build_curl=0
args=`getopt dc $*`
if [ $? != 0 ]
then
  echo "Usage: ./bootstrap [-d] [-c]"
  exit 2
fi
set -- $args
for i
do
  case "$i"
  in
    -d)
      debug=1
      shift;;

    -c)
      build_curl=1
      shift;;

    --)
      shift; break;;
  esac
done

# Build libcurl & c-ares
if [ $build_curl -eq 1 ]; then
  cd src/libs/c-ares
  ./buildconf && ./configure --prefix="$HOME/c-ares" --disable-shared && make && make install
  cd ../curl
  ./buildconf && ./configure --without-ssl \
  --disable-shared \
  --disable-crypto-auth  \
  --disable-ipv6 \
  --disable-proxy \
  --enable-ares="$HOME/c-ares" \
  --disable-manual \
  --disable-ftp \
  --disable-file \
  --disable-ldap \
  --disable-ldaps \
  --disable-rtsp \
  --enable-proxy \
  --disable-dict \
  --disable-telnet \
  --disable-tftp \
  --disable-pop3 \
  --disable-imap \
  --disable-smtp \
  --disable-manual \
  --disable-ipv6 \
  --disable-sspi \
  --disable-cookies \
  --disable-gopher && make

  if [ $? != 0 ]; then
    cd ../../..
    exit
  fi

  cd ../../..
fi

# Clean ETrun
make distclean

# Compile for linux
if [ $debug -eq 0 ]; then
  echo "Will now compile *WITHOUT* debug flags"
  sleep 1
  ./configure CFLAGS="-Wno-enum-compare -Wno-format-security -Wno-switch -Wno-array-bounds"
else
  echo "Will now compile *WITH* debug flags"
  sleep 1
  ./configure CFLAGS="-Wno-enum-compare -Wno-format-security -Wno-switch -Wno-array-bounds -g -ggdb"
fi

make

if [ $? != 0 ]; then
  exit
fi

# Strip if debug mode is OFF
if [ $debug -eq 0 ]; then
  strip -s src/cgame/.libs/libcgame.so
  strip -s src/game/.libs/libgame.so
  strip -s src/ui/.libs/libui.so
  strip -s src/APImodule/.libs/libapi.so
fi

mv src/cgame/.libs/libcgame.so $BUILD_DIR/cgame.mp.i386.so
mv src/game/.libs/libgame.so $BUILD_DIR/qagame.mp.i386.so
mv src/ui/.libs/libui.so $BUILD_DIR/ui.mp.i386.so
mv src/APImodule/.libs/libapi.so $BUILD_DIR/APImodule.so' > linux_compile.sh
fi

# Change rights
chmod +x linux_compile.sh
chmod +x osx_compile.sh


# Bootstrap

echo "Running aclocal"
aclocal

echo "Running autoconf"
autoconf

echo "Running autoheader"
autoheader

# libtoolize on Linux
# glibtoolize on MacOS
host=`uname -s`
if [ $host = "Darwin" ]; then
  echo "OSX detected, running glibtoolize"
  glibtoolize
else
  echo "Linux detected, running libtoolize"
  libtoolize
fi

echo "Running automake"
automake --add-missing --copy --no-force --foreign

# Check errors
if [ $? != 0 ]
then
  echo "Bootstrap failed!"
else
  # End
  echo "Bootstrap done."
  if [ $host = "Darwin" ]; then
    echo "Run ./osx_compile.sh to compile ETrun"
  else
    echo "Run ./linux_compile.sh to compile ETrun"
  fi
fi
